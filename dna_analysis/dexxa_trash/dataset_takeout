# #!/bin/bash
# # Download dbsnp and update chromosome names

# export DBSNP_VERSION=155

# wget "https://ftp.ncbi.nih.gov/snp/archive/b$DBSNP_VERSION/VCF/GCF_000001405.39.gz"
# wget "https://ftp.ncbi.nih.gov/snp/archive/b$DBSNP_VERSION/VCF/GCF_000001405.39.gz.tbi"
# wget "https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/001/405/GCF_000001405.39_GRCh38.p13/GCF_000001405.39_GRCh38.p13_assembly_report.txt"

# cat GCF_000001405.39_GRCh38.p13_assembly_report.txt | \
#   grep -e '^[^#]' | \
#   awk '{ print $7, $11 }' > GCF_000001405.39_GRCh38.p13_assembly_report.chrnames

# bcftools annotate \
#   --rename-chrs GCF_000001405.39_GRCh38.p13_assembly_report.chrnames \
#   --threads 10 -Oz \
#   -o GRCh38.dbSNP"$DBSNP_VERSION".vcf.gz \
#   GCF_000001405.39.gz

# tabix -p vcf GRCh38.dbSNP$DBSNP_VERSION.vcf.gz




#!/bin/bash

# Set version and file names
export DBSNP_VERSION=155
export DBSNP_FILE=GCF_000001405.39.gz
export DBSNP_INDEX=GCF_000001405.39.gz.tbi
export ASSEMBLY_REPORT=GCF_000001405.39_GRCh38.p13_assembly_report.txt
export CHRNAMES=GCF_000001405.39_GRCh38.p13_assembly_report.chrnames
export OUTPUT_VCF=GRCh38.dbSNP${DBSNP_VERSION}.vcf.gz

# 1. Download dbSNP VCF and its index
echo "Downloading dbSNP VCF and index..."
wget -c "https://ftp.ncbi.nih.gov/snp/archive/b${DBSNP_VERSION}/VCF/${DBSNP_FILE}"
wget -c "https://ftp.ncbi.nih.gov/snp/archive/b${DBSNP_VERSION}/VCF/${DBSNP_INDEX}"

# 2. Download the assembly report for chromosome name mapping
echo "Downloading assembly report..."
wget -c "https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/001/405/GCF_000001405.39_GRCh38.p13/${ASSEMBLY_REPORT}"

# 3. Generate chromosome name mapping
echo "Preparing chromosome name mapping file..."
cat $ASSEMBLY_REPORT | grep -v '^#' | awk -F '\t' '{print $7, $1}' > $CHRNAMES

# 4. Annotate the VCF with standard chromosome names
echo "Renaming chromosomes and saving output..."
bcftools annotate \
  --rename-chrs $CHRNAMES \
  --threads 10 \
  -Oz -o $OUTPUT_VCF \
  $DBSNP_FILE

# 5. Index the final VCF file
echo "Indexing final VCF..."
tabix -p vcf $OUTPUT_VCF

echo "Done! Final VCF file: $OUTPUT_VCF"
